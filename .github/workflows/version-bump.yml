name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
      prerelease_id:
        description: 'Prerelease identifier (for prerelease only)'
        required: false
        default: 'alpha'

jobs:
  bump:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests before version bump
      run: npm test
      
    - name: Bump version (prerelease)
      if: ${{ github.event.inputs.version_type == 'prerelease' }}
      run: npm version prerelease --preid=${{ github.event.inputs.prerelease_id }}
      
    - name: Bump version (regular)
      if: ${{ github.event.inputs.version_type != 'prerelease' }}
      run: npm version ${{ github.event.inputs.version_type }}
      
    - name: Get new version
      id: version
      run: echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Update CHANGELOG
      run: |
        DATE=$(date +%Y-%m-%d)
        VERSION=${{ steps.version.outputs.NEW_VERSION }}
        
        # Create new changelog entry
        sed -i "s/## \[Unreleased\]/## [Unreleased]\n\n## [$VERSION] - $DATE/" CHANGELOG.md
        
        # Add compare link at bottom
        echo "[$VERSION]: https://github.com/metrue/discussing/compare/v$(git describe --tags --abbrev=0 HEAD~1)...v$VERSION" >> CHANGELOG.md
        
    - name: Commit changelog update
      run: |
        git add CHANGELOG.md
        git commit -m "docs: update changelog for v${{ steps.version.outputs.NEW_VERSION }}"
        
    - name: Push changes and tags
      run: |
        git push --follow-tags
        
    - name: Create Release Notes
      run: |
        VERSION=${{ steps.version.outputs.NEW_VERSION }}
        echo "Release v$VERSION has been created and will be published automatically." >> release_notes.txt
        echo "" >> release_notes.txt
        echo "## Changes" >> release_notes.txt
        
        # Extract changes from CHANGELOG
        sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | head -n -1 | tail -n +2 >> release_notes.txt
        
    - name: Summary
      run: |
        echo "âœ… Version bumped to ${{ steps.version.outputs.NEW_VERSION }}"
        echo "âœ… CHANGELOG.md updated"
        echo "âœ… Git tag created and pushed"
        echo "ðŸš€ Release workflow will now automatically publish to npm"